class Solution {
    public int minMalwareSpread(int[][] graph, int[] initial) {
        Arrays.sort(initial);
        int[] infected = new int[graph.length];
        for (int i : initial) {
            infected[i] = 1;
        }
        int min = Integer.MAX_VALUE;
        int ans = -1;
        for (int rem : initial) {
            infected[rem] = 0;
            int tmp = bfs(graph, infected.clone(), rem);
            if (tmp < min) {
                min = tmp;
                ans = rem;
            }
            infected[rem] = 1;
        }
        return ans;
    }

    private int bfs(int[][] graph, int[] infected, int rem) {
        List<Integer> cur = new ArrayList<>();
        for (int i = 0; i < graph.length; i++) {
            if (infected[i] == 1) {
                cur.add(i);
            }
        }
        int ans = 0;
        while (cur.size() > 0) {
            List<Integer> next = new ArrayList<>();
            for (int inf : cur) {
                for (int i = 0; i < graph.length; i++) {
                    if (i != rem && graph[inf][i] == 1 && infected[i] == 0) {
                        infected[i] = 1;
                        ans++;
                        next.add(i);
                    }
                }
            }
            cur = next;
        }
        return ans;
    }
}
